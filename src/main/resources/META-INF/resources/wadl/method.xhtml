<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:cc="http://xmlns.jcp.org/jsf/composite"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets">

  <!-- INTERFACE -->
  <cc:interface>
    <cc:attribute name="method" required="true" type="net.java.dev.wadl.Method" displayName="The method ID"/>
    <cc:attribute name="description" required="false" default="" type="java.lang.String" displayName="The resource description. If present this is displayed below the label. May be extensive. Is printed without encoding (as HTML)."/>
    <cc:attribute name="title" required="false" default="Rest Resource" type="java.lang.String" displayName="The resource label"/>
    <cc:attribute name="icon" required="false" default="glyphicon glyphicon-cloud" type="java.lang.String" displayName="A FA icon to display in the header."/>
    <cc:attribute name="collapsible" required="false" default="true" type="java.lang.Boolean" displayName="Whether the panel body is collapsible."/>

    <cc:attribute name="labelProvider" required="true" shortDescription="A backing bean supporting WADL text processing."/>

    <cc:attribute name="verbose" required="false" default="false" type="java.lang.Boolean" displayName="Whether to log warnings when a label is not found."/>
  </cc:interface>

  <!--you must add the following CSS somewhere in your app.-->
  <!--.rest-button { position: absolute; top: 0; left: 0; height: 100%; padding: .75em !important; width: 6em; color: #fff !important; }-->
  <!--.rest-label{ margin-left: 6em; }-->

  <!-- IMPLEMENTATION -->
  <cc:implementation>
    <div id="#{cc.clientId}">

      <h:panelGroup rendered="#{cc.attrs.method !=null}">

        <div class="card border-#{wadlBean.buildCSSType(cc.attrs.method.name)} mb-3">
          <div class="card-header" role="tab" id="#{cc.attrs.method.id}" style="position: relative; border-bottom: none;">
            <a data-toggle="collapse" data-parent="#accordion" href="#collapse#{cc.attrs.method.id}" aria-expanded="true" aria-controls="collapse#{cc.attrs.method.id}">
              <div class="rest-button bg-#{wadlBean.buildCSSType(cc.attrs.method.name)}">  <h:outputText value="#{cc.attrs.method.name}"/> </div>
              <h:outputText value="#{cc.attrs.labelProvider.parseMethodId(cc.attrs.method.id)}" styleClass="rest-label text-capitalize"/>
            </a>
          </div>

          <div id="collapse#{cc.attrs.method.id}" class="collapse" role="tabpanel" aria-labelledby="headingOne">
            <div class="card-body">
              <!--the description-->
              <p class="card-text">
                <h:outputText value="#{cc.attrs.labelProvider.getMethodDescription(cc.attrs.method.id)}" escape="false"/>
              </p>

              <p class="text-bold">
                <code><h:outputText value="#{wadlBean.buildFormattedURI(cc.attrs.method.path)}" escape="false"/></code>
              </p>

              <h:panelGroup rendered="#{wadlBean.findMethodParameters(cc.attrs.method).size() > 0}">
                <hr/>
                <label class="text-small">Request parameters</label>
                <ui:repeat value="#{wadlBean.findMethodParameters(cc.attrs.method)}" var="p">
                  <div class="d-flex justify-content-between">
                    <div>
                      <span class="text-bold"> #{p.name} </span>
                      <h:outputText value="#{p.path}" styleClass="text-code mx-2" rendered="#{p.path ne null}"/>
                      <h:outputText value="Default = #{p.default}" styleClass="text-code mx-2" rendered="#{p.default ne null}"/>
                    </div>
                    <div>
                      <span class="badge badge-info">#{p.type.localPart}</span>
                      <span class="badge badge-secondary text-lowercase"> #{p.style} </span>
                    </div>
                  </div>

                  <h:outputText value="#{cc.attrs.labelProvider.getLabel(cc.attrs.method.id, p.name)}" escape="false" styleClass="ml-3"/>

                </ui:repeat>

              </h:panelGroup>


              <h:panelGroup rendered="#{wadlBean.isPutOrPost(cc.attrs.method)}">
                <hr/>
                <!--Request objects are only valid for PUT or POST operations-->
                <label class="text-small">Post parameters</label>
                <h:panelGroup rendered="#{empty wadlBean.findMethodRequestElements(cc.attrs.method).entrySet().toArray()}">
                  <p class="ml-3">
                    Parameters are submitted as <code>application/x-www-form-urlencoded</code>
                  </p>
                </h:panelGroup>
                <h:panelGroup rendered="#{not empty wadlBean.findMethodRequestElements(cc.attrs.method).entrySet().toArray()}">
                  <ui:repeat value="#{wadlBean.findMethodRequestElements(cc.attrs.method).entrySet().toArray()}" var="mvmap">
                    <div class="d-flex justify-content-between">
                      <span class="d-block text-bold"> #{mvmap.key} </span>
                      <div>
                        <ui:repeat value="#{mvmap.value}" var="rep">
                          <span class="d-block badge badge-#{wadlBean.buildCSSType(rep.mediaType)}">#{rep.mediaType}</span>
                        </ui:repeat>
                      </div>
                    </div>
                    <h:outputText value="#{cc.attrs.labelProvider.getLabel(cc.attrs.method.id, mvmap.key)}" escape="false" styleClass="ml-3"/>
                  </ui:repeat>
                </h:panelGroup>
              </h:panelGroup>

              <hr/>
              <label class="text-small">Response parameters</label>
              <ui:repeat value="#{cc.attrs.method.response}" var="r">
                <ui:repeat value="#{wadlBean.findMethodResponseElements(r).entrySet().toArray()}" var="mvmap">
                  <div class="d-flex justify-content-between">
                    <span class="d-block text-bold"> HTTP #{r.status.size() == 0? '200' : r.status} </span>
                    <div>
                      <ui:repeat value="#{mvmap.value}" var="rep">
                        <span class="d-block badge badge-#{wadlBean.buildCSSType(rep.mediaType)}">#{rep.mediaType}</span>
                      </ui:repeat>
                    </div>
                  </div>
                  <h:outputText value="#{cc.attrs.labelProvider.getLabel(cc.attrs.method.id, mvmap.key)}" escape="false" styleClass="ml-3"/>
                </ui:repeat>
              </ui:repeat>

            </div>

          </div>
        </div>


      </h:panelGroup>
    </div>
  </cc:implementation>
</html>