<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:cc="http://xmlns.jcp.org/jsf/composite"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets">

  <!-- INTERFACE -->
  <cc:interface>
    <cc:attribute name="method" required="true" type="net.java.dev.wadl.Method" displayName="The method ID"/>
    <cc:attribute name="description" required="false" default="" type="java.lang.String" displayName="The resource description. If present this is displayed below the label. May be extensive. Is printed without encoding (as HTML)."/>
    <cc:attribute name="title" required="false" default="Rest Resource" type="java.lang.String" displayName="The resource label"/>
    <cc:attribute name="icon" required="false" default="glyphicon glyphicon-cloud" type="java.lang.String" displayName="A FA icon to display in the header."/>
    <cc:attribute name="collapsible" required="false" default="true" type="java.lang.Boolean" displayName="Whether the panel body is collapsible."/>

    <cc:attribute name="labelProvider" required="true" shortDescription="A backing bean supporting WADL text processing."/>

    <cc:attribute name="verbose" required="false" default="false" type="java.lang.Boolean" displayName="Whether to log warnings when a label is not found."/>
  </cc:interface>

  <!--you must add the following CSS somewhere in your app.-->
  <!--.rest-button { position: absolute; top: 0; left: 0; height: 100%; padding: .75em !important; width: 6em; color: #fff !important; }-->
  <!--.rest-label{ margin-left: 6em; }-->

  <!-- IMPLEMENTATION -->
  <cc:implementation>
    <div id="#{cc.clientId}">

      <h:panelGroup rendered="#{cc.attrs.method !=null}">

        <div class="card card-outline-#{wadlBean.buildCSSType(cc.attrs.method.name)} mb-3">
          <div class="card-header" role="tab" id="#{cc.attrs.method.id}" style="position: relative; border-bottom: none;">
            <a data-toggle="collapse" data-parent="#accordion" href="#collapse#{cc.attrs.method.id}" aria-expanded="true" aria-controls="collapse#{cc.attrs.method.id}">
              <div class="rest-button card-#{wadlBean.buildCSSType(cc.attrs.method.name)}">  <h:outputText value="#{cc.attrs.method.name}"/> </div>
              <h:outputText value="#{cc.attrs.labelProvider.parseMethodId(cc.attrs.method.id)}" styleClass="rest-label text-capitalize"/>
            </a>
          </div>

          <div id="collapse#{cc.attrs.method.id}" class="collapse" role="tabpanel" aria-labelledby="headingOne">
            <div class="card-block">
              <!--the description-->
              <p class="card-text">
                <h:outputText value="#{cc.attrs.labelProvider.getDescription(cc.attrs.method.id)}" escape="false"/>
              </p>

              <p class="text-bold">
                <code><h:outputText value="#{wadlBean.buildFormattedURI(cc.attrs.method.path)}" escape="false"/></code>
              </p>

              <h:panelGroup rendered="#{wadlBean.findMethodParameters(cc.attrs.method).size() > 0}">
                <table class="table table-sm">
                  <tr>
                    <th width="20%">Parameter</th>
                    <th width="50%">Description</th>
                    <th>Type</th>
                    <th>Param</th>
                  </tr>
                  <ui:repeat value="#{wadlBean.findMethodParameters(cc.attrs.method)}" var="p">
                    <tr>
                      <th> <h:outputText value="#{p.name}" styleClass="text-primary"/>  </th>
                      <td> #{cc.attrs.labelProvider.getLabel(p.name)} </td>
                      <td class="text-capitalize">#{p.type.localPart}</td>
                      <td class="text-lowercase">#{p.style}</td>
                    </tr>
                  </ui:repeat>
                </table>
              </h:panelGroup>

              <h:panelGroup rendered="#{wadlBean.isPutOrPost(cc.attrs.method)}">
                <!--Request objects are only valid for PUT or POST operations-->
                <label>Request</label>
                <table class="table table-sm">
                  <tr>
                    <th width="20%">Element</th>
                    <th width="50%">Description</th>
                    <th>Encoding</th>
                  </tr>
                  <ui:repeat value="#{wadlBean.findMethodRequestElements(cc.attrs.method).entrySet().toArray()}" var="mvmap">
                    <tr>
                      <td> <code> #{mvmap.key} </code> </td>
                      <td> #{cc.attrs.labelProvider.getLabel(mvmap.key)} </td>
                      <td>
                        <ui:repeat value="#{mvmap.value}" var="rep">
                          <span class="badge badge-#{wadlBean.buildCSSType(rep.mediaType)}">#{rep.mediaType}</span>
                        </ui:repeat>
                      </td>
                    </tr>
                  </ui:repeat>
                </table>

              </h:panelGroup>

              <label>Response</label>
              <table class="table table-sm">
                <tr>
                  <th width="20%">HTTP</th>
                  <th width="50%">Element</th>
                  <th>Encoding</th>
                </tr>
                <ui:repeat value="#{cc.attrs.method.response}" var="r">
                  <ui:repeat value="#{wadlBean.findMethodResponseElements(r).entrySet().toArray()}" var="mvmap">
                    <tr>
                      <td> #{r.status.size() == 0? '200' : r.status} </td>
                      <td> <code>#{mvmap.key}</code>  #{cc.attrs.labelProvider.getLabel(mvmap.key)} </td>
                      <td>
                        <ui:repeat value="#{mvmap.value}" var="rep">
                          <span class="badge badge-#{wadlBean.buildCSSType(rep.mediaType)}">#{rep.mediaType}</span>
                        </ui:repeat>
                      </td>
                    </tr>
                  </ui:repeat>
                </ui:repeat>
              </table>

            </div>

          </div>
        </div>


      </h:panelGroup>
    </div>
  </cc:implementation>
</html>